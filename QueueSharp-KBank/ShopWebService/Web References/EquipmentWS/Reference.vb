'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34011
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34011.
'
Namespace EquipmentWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EquipmentFileServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class EquipmentFileService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetFileFromDCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTransferStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ErrorMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ShopWebService.My.MySettings.Default.ShopWebService_EquipmentWS_EquipmentFileService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetFileFromDCCompleted As GetFileFromDCCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTransferStatusCompleted As UpdateTransferStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event ErrorMessageCompleted As ErrorMessageCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileFromDC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileFromDC(ByVal EventDate As String, ByVal ShopAbb As String, ByVal TargetType As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFileFromDC", New Object() {EventDate, ShopAbb, TargetType})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileFromDCAsync(ByVal EventDate As String, ByVal ShopAbb As String, ByVal TargetType As String)
            Me.GetFileFromDCAsync(EventDate, ShopAbb, TargetType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileFromDCAsync(ByVal EventDate As String, ByVal ShopAbb As String, ByVal TargetType As String, ByVal userState As Object)
            If (Me.GetFileFromDCOperationCompleted Is Nothing) Then
                Me.GetFileFromDCOperationCompleted = AddressOf Me.OnGetFileFromDCOperationCompleted
            End If
            Me.InvokeAsync("GetFileFromDC", New Object() {EventDate, ShopAbb, TargetType}, Me.GetFileFromDCOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileFromDCOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileFromDCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileFromDCCompleted(Me, New GetFileFromDCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransferStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTransferStatus(ByVal FileScheduleID As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateTransferStatus", New Object() {FileScheduleID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTransferStatusAsync(ByVal FileScheduleID As String)
            Me.UpdateTransferStatusAsync(FileScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTransferStatusAsync(ByVal FileScheduleID As String, ByVal userState As Object)
            If (Me.UpdateTransferStatusOperationCompleted Is Nothing) Then
                Me.UpdateTransferStatusOperationCompleted = AddressOf Me.OnUpdateTransferStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateTransferStatus", New Object() {FileScheduleID}, Me.UpdateTransferStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTransferStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTransferStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTransferStatusCompleted(Me, New UpdateTransferStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ErrorMessage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ErrorMessage() As String
            Dim results() As Object = Me.Invoke("ErrorMessage", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ErrorMessageAsync()
            Me.ErrorMessageAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ErrorMessageAsync(ByVal userState As Object)
            If (Me.ErrorMessageOperationCompleted Is Nothing) Then
                Me.ErrorMessageOperationCompleted = AddressOf Me.OnErrorMessageOperationCompleted
            End If
            Me.InvokeAsync("ErrorMessage", New Object(-1) {}, Me.ErrorMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnErrorMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ErrorMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ErrorMessageCompleted(Me, New ErrorMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetFileFromDCCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileFromDCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileFromDCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub UpdateTransferStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTransferStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTransferStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ErrorMessageCompletedEventHandler(ByVal sender As Object, ByVal e As ErrorMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ErrorMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
