<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQYAAABfCAMAAAA9HZmFAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAYBQTFRF/KxT/uhV
        p5VJWVlc/u6E/eMz2chTAIXr2cla/r9w/uZI//3y3uW4//75//zr2spiIyEU//vj2stral8w2s113ufE
        AGzS3uvezZUV3uGaCuke6QkJtoQEyc7GAFS6//rb/vGb/vKi/vCT3uSs6tZN/vWz/va6/u18/uxz/vOr
        /utqlmoG/ulf766P2cdN/8+J//nTv7is//fBiIiF//jN2tWj69MyzMiluLSK/d0H8XdVqeqB3unRQF2V
        fepn5um4Iwjp5ufl5uzLQelA7UEw6PHo5e3Zhng78eqS6eSZ7Omq/u+MCD2e//fHWUPX39+I/OAhcoix
        /Nu5kX7G7fDUd3dw3PSm3tFzvcC89PPJ8vbxnqbH/erHva9Z3OHb8fTn8PDH8vTd+Pr3ybY1j6C78uyg
        7/Pt7eu4xe+S9fG879xg9PPR7u3q+vfX2MCSPybe7/Ww9fCznZuQ9vjq8e3f2NrR5NRjPzsjq6qn8d93
        +vnkzb9f7e3F9e+qAAAA////z/l6EwAAFs1JREFUeF7tnItbE9e6xuMEqNyHjFY8EqmCF64SI5CNIpba
        ThUqtnVKbB2s2lZLtZfUMHHDXv7r5/3WbdZMZpJJdLd9nnMWqEDRPvnxvt9trTU59v8LBHLsLa1PT/E1
        zD/JsIbVGlRrZGTkwY0bNzbxdnLzZLg2lsS6xtcXWFf5usjXBbFm+DrH10dinae1xVcPX5fEuizWrFjz
        ah1Ta8BcvQO95poepXXcXH18SQxPBYVPMwDg39JMYRAYRp7cOHnDIHDy5NDJoaHv22MQFCIYOIUEDFEK
        mkNI4ViIoXdgABw0CQGhFQYphqfdYyAKnEMUxBDWq1ANJIYENZgUpBoMChE1tBFDTAqmGBIpHI+oQYjh
        VFYKCWoQGDiHcEEMkMPRf88T2hSJajDFoCAkikGa4tv34wnOIWoKUsNQOwzde6JlZDANcSANkewJiUF6
        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
        QmCC
</value>
  </data>
</root>